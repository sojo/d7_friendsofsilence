<?php

/**
 * @file
 * Node tests for Amazon module.
 */

class AmazonNodesTest extends AmazonBaseTest {
  protected $admin_user;

  public static function getInfo() {
    return array(
      'name' => 'Amazon nodes',
      'description' => 'Tests that Amazon nodes render correctly.',
      'group' => 'Amazon',
    );
  }

  protected function setUp($modules = array()) {
    // Enable modules.
    parent::setUp($modules);
  }

  /**
   * Test the field formatters.
   */
  public function testFieldFormatters() {
    // Login as an admin user.
    $this->drupalLogin($this->admin_user);

    // Add ASIN field to the content type.
    _amazon_test_attach_fields();

    // Check UI
    $this->drupalGet('admin/structure/types/manage/article/fields');
    $this->assertRaw('ASIN');
    $this->assertRaw('field_asin');
    $this->assertLink('Amazon item');
    $this->assertLink('Amazon ASIN Text field');
    $this->drupalGet('admin/structure/types/manage/article/display');
    $this->assertRaw('ASIN');
    // Create a node.
    $amazon_items = amazon_test_get_amazon_items();
    $node = $this->drupalCreateNode(
      array(
        'type' => 'article',
        'field_asin' => array(LANGUAGE_NONE => array(array('asin' => $amazon_items[0]['asin'])))
      )
    );

    $test_styles = $this->amazon_test_get_amazon_styles();
    foreach ($test_styles as $style => $details) {

      // Change the field format.
      if ($instance = field_read_instance('node', 'field_asin', 'article')) {
        $instance['display']['default']['type'] = 'asin_' . $style;
        field_update_instance($instance);
      }

      // Test that the markup is correct.
      $this->drupalGet('node/' . $node->nid);
      $this->assertResponse(200);
      $this->assertRaw('ASIN:');

      // Test markup.
      $xpath = $details['xpath'];
      foreach ($xpath as $item) {
        $xpath_query = $item['query'];
        $xpath_values = $item['values'];

        // Fill in the value for style.
        if (isset($xpath_values[':style_class'])) {
          $xpath_values[':style_class'] = "amazon-item-$style";
        }
        $this->assertElementByXPath($xpath_query, $xpath_values, "Style '$style' was rendered correctly.");
      }

      // Test that the urls are not double encoded.
      $this->assertNoRaw('&amp;amp;tag=');
      $this->assertNoRaw('&amp;amp;linkCode=');
      $this->assertNoRaw('&amp;amp;creativeASIN=');
    }
  }
}
